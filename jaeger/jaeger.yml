services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.18
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 9400:9200
      - 9500:9300
    environment:
      - 'ES_JAVA_OPTS=-Xms256m -Xmx256m'
      - 'discovery.type=single-node'
      - 'xpack.security.enabled=false'
      - 'http.port=9200'  # Default internal port
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9200/_cluster/health?wait_for_status=green&timeout=10s']
      interval: 5s
      timeout: 10s
      retries: 10
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP HTTP receiver
    depends_on:
      - jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    volumes:
      - "./jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
    command: --query.ui-config /etc/jaeger/jaeger-ui.json
    ports:
      - 6831:6831/udp # accept jaeger.thrift in compact Thrift protocol used by most current Jaeger clients
      # - 6832:6832/udp # accept jaeger.thrift in binary Thrift protocol used by Node.js Jaeger client (because thriftrw npm package does not support compact protocol)
      # - 5775:5775/udp # accept zipkin.thrift in compact Thrift protocol (deprecated; only used by very old Jaeger clients, circa 2016)
      # - 5778:5778 # serve configs, sampling strategies
      # - 4317:4317 # OpenTelemetry Protocol (OTLP) over gRPC
      # - 4318:4318 # OpenTelemetry Protocol (OTLP) over HTTP
      - 16686:16686 # UI port
      # - 14269:14269 # collector admin port: health check at / and metrics at /metrics
      # - 9411:9411 # Zipkin compatible endpoint
      - 14268:14268 # HTTP port for spans
    environment:
      # - MEMORY_MAX_TRACES=100000
      # - SPAN_STORAGE_TYPE=badger
      # - BADGER_EPHEMERAL=false
      # - BADGER_DIRECTORY_VALUE=/badger/data
      # - BADGER_DIRECTORY_KEY=/badger/key
      # - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
      # - PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR=${PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR:-true}
      # - PROMETHEUS_QUERY_NAMESPACE=${PROMETHEUS_QUERY_NAMESPACE:-}
      # - PROMETHEUS_QUERY_DURATION_UNIT=${PROMETHEUS_QUERY_DURATION_UNIT:-}
      - PROMETHEUS_QUERY_NORMALIZE_CALLS=true
      - PROMETHEUS_QUERY_NORMALIZE_DURATION=true
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"